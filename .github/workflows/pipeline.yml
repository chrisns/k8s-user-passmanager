name: CI Pipeline
on: [push, pull_request]

jobs:
  secret-check:
    name: Secret check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: docker://zricethezav/gitleaks
        with:
          args: -v --exclude-forks --repo-path=. --repo-config

  golangci-lint:
    name: GolangCI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: docker://golangci/golangci-lint
        with:
          args: golangci-lint run --color=always

  test-build-publish:
    name: Test and Build
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      max-parallel: 30
      matrix:
        OS:
          - darwin
          - linux
          - windows
          - netbsd
          - freebsd
          - openbsd
          - plan9
          - solaris
        ARCH:
          - amd64
          - 386
          - arm64
          - arm
        include:
          - OS: windows
            EXT: .exe
        exclude:
          - OS: darwin
            ARCH: arm64
          - OS: darwin
            ARCH: arm
          - OS: windows
            ARCH: arm64
          - OS: freebsd
            ARCH: arm64
          - OS: plan9
            ARCH: arm64
          - OS: solaris
            ARCH: arm64
          - OS: solaris
            ARCH: arm
          - OS: solaris
            ARCH: 386
    steps:
      - uses: actions/checkout@v1
      - run: go test -v
      - run: go build -a -o kubectl-passman-${{matrix.OS}}-${{matrix.ARCH}}${{matrix.EXT}}
        env:
          GOOS: ${{matrix.OS}}
          GOARCH: ${{matrix.ARCH}}
      - run: chmod +x kubectl-passman-${{matrix.OS}}-${{matrix.ARCH}}${{matrix.EXT}}
        env:
          GOOS: ${{matrix.OS}}
          GOARCH: ${{matrix.ARCH}}
      - uses: actions/upload-artifact@v1
        with:
          name: kubectl-passman-${{matrix.OS}}-${{matrix.ARCH}}${{matrix.EXT}}
          path: kubectl-passman-${{matrix.OS}}-${{matrix.ARCH}}${{matrix.EXT}}
      - name: fetch hub
        if: github.event_name == 'push'
        run: wget -q -c https://github.com/github/hub/releases/download/v2.12.7/hub-darwin-amd64-2.12.7.tgz -O - | tar -xz
      - name: create pre-release if it doesn't exist
        if: github.event_name == 'push'
        run: hub-darwin-amd64-2.12.7/bin/hub release create -p -m "Latest build of ${{github.ref}}" "build-${{github.ref}}" || echo release already exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to release
        if: github.event_name == 'push'
        run: |
          zip kubectl-passman-${{matrix.OS}}-${{matrix.ARCH}}.zip kubectl-passman-${{matrix.OS}}-${{matrix.ARCH}}${{matrix.EXT}}
          hub-darwin-amd64-2.12.7/bin/hub release edit -a kubectl-passman-${{matrix.OS}}-${{matrix.ARCH}}${{matrix.EXT}} -m "Latest build of ${{github.ref}}" "build-${{github.ref}}"
          hub-darwin-amd64-2.12.7/bin/hub release edit -a kubectl-passman-${{matrix.OS}}-${{matrix.ARCH}}.zip -m "Latest build of ${{github.ref}}" "build-${{github.ref}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
