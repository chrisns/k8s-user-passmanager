name: CI Pipeline
on: [push]

jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: docker run --rm -v `pwd`:/app -w /app cytopia/golint .

  go-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: docker run --rm -v `pwd`:/app -w /app cytopia/gofmt --ci .

  go-imports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: docker run --rm -v `pwd`:/app -w /app cytopia/goimports --ci .

  go-vet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: docker run --rm -v `pwd`:/app -w /app golang:1.13 go vet

  govet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: docker://golang:1.13
        with:
          args: go vet

  go-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: docker run --rm -v `pwd`:/app -w /app golang:1.13 go test -v

  go-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        GOOS: [windows, linux, darwin]
        GOARCH: [amd64]
    steps:
      - uses: actions/checkout@v1
      - run: docker run --rm -v `pwd`:/app -w /app -e GOOS=${{ matrix.GOOS }} -e GOARCH=${{ matrix.GOARCH }} golang:1.13 go build -a -ldflags '-extldflags "-static"' -o connectivity-tester-windows-amd64.exe
